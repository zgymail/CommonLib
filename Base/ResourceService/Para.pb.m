// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Para.pb.h"
// @@protoc_insertion_point(imports)

@implementation ParaRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ParaRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Para ()
@property (strong) NSString* name;
@property (strong) NSString* value;
@end

@implementation Para

- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) _value_ {
  hasValue_ = !!_value_;
}
@synthesize value;
- (instancetype) init {
  if ((self = [super init])) {
    self.name = @"";
    self.value = @"";
  }
  return self;
}
static Para* defaultParaInstance = nil;
+ (void) initialize {
  if (self == [Para class]) {
    defaultParaInstance = [[Para alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultParaInstance;
}
- (instancetype) defaultInstance {
  return defaultParaInstance;
}
- (BOOL) isInitialized {
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasValue) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasName) {
    [output writeString:1 value:self.name];
  }
  if (self.hasValue) {
    [output writeString:2 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasName) {
    size_ += computeStringSize(1, self.name);
  }
  if (self.hasValue) {
    size_ += computeStringSize(2, self.value);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Para*) parseFromData:(NSData*) data {
  return (Para*)[[[Para builder] mergeFromData:data] build];
}
+ (Para*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Para*)[[[Para builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Para*) parseFromInputStream:(NSInputStream*) input {
  return (Para*)[[[Para builder] mergeFromInputStream:input] build];
}
+ (Para*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Para*)[[[Para builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Para*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Para*)[[[Para builder] mergeFromCodedInputStream:input] build];
}
+ (Para*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Para*)[[[Para builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ParaBuilder*) builder {
  return [[ParaBuilder alloc] init];
}
+ (ParaBuilder*) builderWithPrototype:(Para*) prototype {
  return [[Para builder] mergeFrom:prototype];
}
- (ParaBuilder*) builder {
  return [Para builder];
}
- (ParaBuilder*) toBuilder {
  return [Para builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"value", self.value];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasValue) {
    [dictionary setObject: self.value forKey: @"value"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Para class]]) {
    return NO;
  }
  Para *otherMessage = other;
  return
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasValue == otherMessage.hasValue &&
      (!self.hasValue || [self.value isEqual:otherMessage.value]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasValue) {
    hashCode = hashCode * 31 + [self.value hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ParaBuilder()
@property (strong) Para* resultPara;
@end

@implementation ParaBuilder
@synthesize resultPara;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPara = [[Para alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPara;
}
- (ParaBuilder*) clear {
  self.resultPara = [[Para alloc] init];
  return self;
}
- (ParaBuilder*) clone {
  return [Para builderWithPrototype:resultPara];
}
- (Para*) defaultInstance {
  return [Para defaultInstance];
}
- (Para*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Para*) buildPartial {
  Para* returnMe = resultPara;
  self.resultPara = nil;
  return returnMe;
}
- (ParaBuilder*) mergeFrom:(Para*) other {
  if (other == [Para defaultInstance]) {
    return self;
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ParaBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ParaBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setName:[input readString]];
        break;
      }
      case 18: {
        [self setValue:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasName {
  return resultPara.hasName;
}
- (NSString*) name {
  return resultPara.name;
}
- (ParaBuilder*) setName:(NSString*) value {
  resultPara.hasName = YES;
  resultPara.name = value;
  return self;
}
- (ParaBuilder*) clearName {
  resultPara.hasName = NO;
  resultPara.name = @"";
  return self;
}
- (BOOL) hasValue {
  return resultPara.hasValue;
}
- (NSString*) value {
  return resultPara.value;
}
- (ParaBuilder*) setValue:(NSString*) value {
  resultPara.hasValue = YES;
  resultPara.value = value;
  return self;
}
- (ParaBuilder*) clearValue {
  resultPara.hasValue = NO;
  resultPara.value = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
