// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "SwDesc.pb.h"
// @@protoc_insertion_point(imports)

@implementation SwDescRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SwDescRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [SwAnimationRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface SwDesc ()
@property (strong) NSString* packageName;
@property (strong) NSMutableArray * listArray;
@end

@implementation SwDesc

- (BOOL) hasPackageName {
  return !!hasPackageName_;
}
- (void) setHasPackageName:(BOOL) _value_ {
  hasPackageName_ = !!_value_;
}
@synthesize packageName;
@synthesize listArray;
@dynamic list;
- (instancetype) init {
  if ((self = [super init])) {
    self.packageName = @"";
  }
  return self;
}
static SwDesc* defaultSwDescInstance = nil;
+ (void) initialize {
  if (self == [SwDesc class]) {
    defaultSwDescInstance = [[SwDesc alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSwDescInstance;
}
- (instancetype) defaultInstance {
  return defaultSwDescInstance;
}
- (NSArray *)list {
  return listArray;
}
- (SwAnimation*)listAtIndex:(NSUInteger)index {
  return [listArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasPackageName) {
    return NO;
  }
  __block BOOL isInitlist = YES;
   [self.list enumerateObjectsUsingBlock:^(SwAnimation *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitlist = NO;
      *stop = YES;
    }
  }];
  if (!isInitlist) return isInitlist;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPackageName) {
    [output writeString:1 value:self.packageName];
  }
  [self.listArray enumerateObjectsUsingBlock:^(SwAnimation *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPackageName) {
    size_ += computeStringSize(1, self.packageName);
  }
  [self.listArray enumerateObjectsUsingBlock:^(SwAnimation *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SwDesc*) parseFromData:(NSData*) data {
  return (SwDesc*)[[[SwDesc builder] mergeFromData:data] build];
}
+ (SwDesc*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SwDesc*)[[[SwDesc builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SwDesc*) parseFromInputStream:(NSInputStream*) input {
  return (SwDesc*)[[[SwDesc builder] mergeFromInputStream:input] build];
}
+ (SwDesc*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SwDesc*)[[[SwDesc builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SwDesc*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SwDesc*)[[[SwDesc builder] mergeFromCodedInputStream:input] build];
}
+ (SwDesc*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SwDesc*)[[[SwDesc builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SwDescBuilder*) builder {
  return [[SwDescBuilder alloc] init];
}
+ (SwDescBuilder*) builderWithPrototype:(SwDesc*) prototype {
  return [[SwDesc builder] mergeFrom:prototype];
}
- (SwDescBuilder*) builder {
  return [SwDesc builder];
}
- (SwDescBuilder*) toBuilder {
  return [SwDesc builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPackageName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"packageName", self.packageName];
  }
  [self.listArray enumerateObjectsUsingBlock:^(SwAnimation *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"list"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPackageName) {
    [dictionary setObject: self.packageName forKey: @"packageName"];
  }
  for (SwAnimation* element in self.listArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"list"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SwDesc class]]) {
    return NO;
  }
  SwDesc *otherMessage = other;
  return
      self.hasPackageName == otherMessage.hasPackageName &&
      (!self.hasPackageName || [self.packageName isEqual:otherMessage.packageName]) &&
      [self.listArray isEqualToArray:otherMessage.listArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPackageName) {
    hashCode = hashCode * 31 + [self.packageName hash];
  }
  [self.listArray enumerateObjectsUsingBlock:^(SwAnimation *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SwDescBuilder()
@property (strong) SwDesc* resultSwDesc;
@end

@implementation SwDescBuilder
@synthesize resultSwDesc;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSwDesc = [[SwDesc alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSwDesc;
}
- (SwDescBuilder*) clear {
  self.resultSwDesc = [[SwDesc alloc] init];
  return self;
}
- (SwDescBuilder*) clone {
  return [SwDesc builderWithPrototype:resultSwDesc];
}
- (SwDesc*) defaultInstance {
  return [SwDesc defaultInstance];
}
- (SwDesc*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SwDesc*) buildPartial {
  SwDesc* returnMe = resultSwDesc;
  self.resultSwDesc = nil;
  return returnMe;
}
- (SwDescBuilder*) mergeFrom:(SwDesc*) other {
  if (other == [SwDesc defaultInstance]) {
    return self;
  }
  if (other.hasPackageName) {
    [self setPackageName:other.packageName];
  }
  if (other.listArray.count > 0) {
    if (resultSwDesc.listArray == nil) {
      resultSwDesc.listArray = [[NSMutableArray alloc] initWithArray:other.listArray];
    } else {
      [resultSwDesc.listArray addObjectsFromArray:other.listArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SwDescBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SwDescBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPackageName:[input readString]];
        break;
      }
      case 18: {
        SwAnimationBuilder* subBuilder = [SwAnimation builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasPackageName {
  return resultSwDesc.hasPackageName;
}
- (NSString*) packageName {
  return resultSwDesc.packageName;
}
- (SwDescBuilder*) setPackageName:(NSString*) value {
  resultSwDesc.hasPackageName = YES;
  resultSwDesc.packageName = value;
  return self;
}
- (SwDescBuilder*) clearPackageName {
  resultSwDesc.hasPackageName = NO;
  resultSwDesc.packageName = @"";
  return self;
}
- (NSMutableArray *)list {
  return resultSwDesc.listArray;
}
- (SwAnimation*)listAtIndex:(NSUInteger)index {
  return [resultSwDesc listAtIndex:index];
}
- (SwDescBuilder *)addList:(SwAnimation*)value {
  if (resultSwDesc.listArray == nil) {
    resultSwDesc.listArray = [[NSMutableArray alloc]init];
  }
  [resultSwDesc.listArray addObject:value];
  return self;
}
- (SwDescBuilder *)setListArray:(NSArray *)array {
  resultSwDesc.listArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (SwDescBuilder *)clearList {
  resultSwDesc.listArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
