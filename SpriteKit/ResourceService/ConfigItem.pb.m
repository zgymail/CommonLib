// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ConfigItem.pb.h"
// @@protoc_insertion_point(imports)

@implementation ConfigItemRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ConfigItemRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ConfigItem ()
@property (strong) NSString* id;
@property (strong) NSString* url;
@property (strong) NSString* version;
@property SInt32 type;
@property (strong) NSString* dir;
@property (strong) NSString* pb_description;
@end

@implementation ConfigItem

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasUrl {
  return !!hasUrl_;
}
- (void) setHasUrl:(BOOL) _value_ {
  hasUrl_ = !!_value_;
}
@synthesize url;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) _value_ {
  hasVersion_ = !!_value_;
}
@synthesize version;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasDir {
  return !!hasDir_;
}
- (void) setHasDir:(BOOL) _value_ {
  hasDir_ = !!_value_;
}
@synthesize dir;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) _value_ {
  hasDescription_ = !!_value_;
}
@synthesize pb_description;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = @"";
    self.url = @"";
    self.version = @"";
    self.type = 0;
    self.dir = @"";
    self.pb_description = @"";
  }
  return self;
}
static ConfigItem* defaultConfigItemInstance = nil;
+ (void) initialize {
  if (self == [ConfigItem class]) {
    defaultConfigItemInstance = [[ConfigItem alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultConfigItemInstance;
}
- (instancetype) defaultInstance {
  return defaultConfigItemInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasUrl) {
    return NO;
  }
  if (!self.hasVersion) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasUrl) {
    [output writeString:2 value:self.url];
  }
  if (self.hasVersion) {
    [output writeString:3 value:self.version];
  }
  if (self.hasType) {
    [output writeInt32:4 value:self.type];
  }
  if (self.hasDir) {
    [output writeString:5 value:self.dir];
  }
  if (self.hasDescription) {
    [output writeString:6 value:self.pb_description];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeStringSize(1, self.id);
  }
  if (self.hasUrl) {
    size_ += computeStringSize(2, self.url);
  }
  if (self.hasVersion) {
    size_ += computeStringSize(3, self.version);
  }
  if (self.hasType) {
    size_ += computeInt32Size(4, self.type);
  }
  if (self.hasDir) {
    size_ += computeStringSize(5, self.dir);
  }
  if (self.hasDescription) {
    size_ += computeStringSize(6, self.pb_description);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ConfigItem*) parseFromData:(NSData*) data {
  return (ConfigItem*)[[[ConfigItem builder] mergeFromData:data] build];
}
+ (ConfigItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ConfigItem*)[[[ConfigItem builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ConfigItem*) parseFromInputStream:(NSInputStream*) input {
  return (ConfigItem*)[[[ConfigItem builder] mergeFromInputStream:input] build];
}
+ (ConfigItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ConfigItem*)[[[ConfigItem builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ConfigItem*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ConfigItem*)[[[ConfigItem builder] mergeFromCodedInputStream:input] build];
}
+ (ConfigItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ConfigItem*)[[[ConfigItem builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ConfigItemBuilder*) builder {
  return [[ConfigItemBuilder alloc] init];
}
+ (ConfigItemBuilder*) builderWithPrototype:(ConfigItem*) prototype {
  return [[ConfigItem builder] mergeFrom:prototype];
}
- (ConfigItemBuilder*) builder {
  return [ConfigItem builder];
}
- (ConfigItemBuilder*) toBuilder {
  return [ConfigItem builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", self.id];
  }
  if (self.hasUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"url", self.url];
  }
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", self.version];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasDir) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dir", self.dir];
  }
  if (self.hasDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pb_description", self.pb_description];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: self.id forKey: @"id"];
  }
  if (self.hasUrl) {
    [dictionary setObject: self.url forKey: @"url"];
  }
  if (self.hasVersion) {
    [dictionary setObject: self.version forKey: @"version"];
  }
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasDir) {
    [dictionary setObject: self.dir forKey: @"dir"];
  }
  if (self.hasDescription) {
    [dictionary setObject: self.pb_description forKey: @"pb_description"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ConfigItem class]]) {
    return NO;
  }
  ConfigItem *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || [self.id isEqual:otherMessage.id]) &&
      self.hasUrl == otherMessage.hasUrl &&
      (!self.hasUrl || [self.url isEqual:otherMessage.url]) &&
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || [self.version isEqual:otherMessage.version]) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasDir == otherMessage.hasDir &&
      (!self.hasDir || [self.dir isEqual:otherMessage.dir]) &&
      self.hasDescription == otherMessage.hasDescription &&
      (!self.hasDescription || [self.pb_description isEqual:otherMessage.pb_description]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [self.id hash];
  }
  if (self.hasUrl) {
    hashCode = hashCode * 31 + [self.url hash];
  }
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [self.version hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasDir) {
    hashCode = hashCode * 31 + [self.dir hash];
  }
  if (self.hasDescription) {
    hashCode = hashCode * 31 + [self.pb_description hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ConfigItemBuilder()
@property (strong) ConfigItem* resultConfigItem;
@end

@implementation ConfigItemBuilder
@synthesize resultConfigItem;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultConfigItem = [[ConfigItem alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultConfigItem;
}
- (ConfigItemBuilder*) clear {
  self.resultConfigItem = [[ConfigItem alloc] init];
  return self;
}
- (ConfigItemBuilder*) clone {
  return [ConfigItem builderWithPrototype:resultConfigItem];
}
- (ConfigItem*) defaultInstance {
  return [ConfigItem defaultInstance];
}
- (ConfigItem*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ConfigItem*) buildPartial {
  ConfigItem* returnMe = resultConfigItem;
  self.resultConfigItem = nil;
  return returnMe;
}
- (ConfigItemBuilder*) mergeFrom:(ConfigItem*) other {
  if (other == [ConfigItem defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasUrl) {
    [self setUrl:other.url];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasDir) {
    [self setDir:other.dir];
  }
  if (other.hasDescription) {
    [self setDescription:other.pb_description];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ConfigItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ConfigItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setUrl:[input readString]];
        break;
      }
      case 26: {
        [self setVersion:[input readString]];
        break;
      }
      case 32: {
        [self setType:[input readInt32]];
        break;
      }
      case 42: {
        [self setDir:[input readString]];
        break;
      }
      case 50: {
        [self setDescription:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultConfigItem.hasId;
}
- (NSString*) id {
  return resultConfigItem.id;
}
- (ConfigItemBuilder*) setId:(NSString*) value {
  resultConfigItem.hasId = YES;
  resultConfigItem.id = value;
  return self;
}
- (ConfigItemBuilder*) clearId {
  resultConfigItem.hasId = NO;
  resultConfigItem.id = @"";
  return self;
}
- (BOOL) hasUrl {
  return resultConfigItem.hasUrl;
}
- (NSString*) url {
  return resultConfigItem.url;
}
- (ConfigItemBuilder*) setUrl:(NSString*) value {
  resultConfigItem.hasUrl = YES;
  resultConfigItem.url = value;
  return self;
}
- (ConfigItemBuilder*) clearUrl {
  resultConfigItem.hasUrl = NO;
  resultConfigItem.url = @"";
  return self;
}
- (BOOL) hasVersion {
  return resultConfigItem.hasVersion;
}
- (NSString*) version {
  return resultConfigItem.version;
}
- (ConfigItemBuilder*) setVersion:(NSString*) value {
  resultConfigItem.hasVersion = YES;
  resultConfigItem.version = value;
  return self;
}
- (ConfigItemBuilder*) clearVersion {
  resultConfigItem.hasVersion = NO;
  resultConfigItem.version = @"";
  return self;
}
- (BOOL) hasType {
  return resultConfigItem.hasType;
}
- (SInt32) type {
  return resultConfigItem.type;
}
- (ConfigItemBuilder*) setType:(SInt32) value {
  resultConfigItem.hasType = YES;
  resultConfigItem.type = value;
  return self;
}
- (ConfigItemBuilder*) clearType {
  resultConfigItem.hasType = NO;
  resultConfigItem.type = 0;
  return self;
}
- (BOOL) hasDir {
  return resultConfigItem.hasDir;
}
- (NSString*) dir {
  return resultConfigItem.dir;
}
- (ConfigItemBuilder*) setDir:(NSString*) value {
  resultConfigItem.hasDir = YES;
  resultConfigItem.dir = value;
  return self;
}
- (ConfigItemBuilder*) clearDir {
  resultConfigItem.hasDir = NO;
  resultConfigItem.dir = @"";
  return self;
}
- (BOOL) hasDescription {
  return resultConfigItem.hasDescription;
}
- (NSString*) pb_description {
  return resultConfigItem.pb_description;
}
- (ConfigItemBuilder*) setDescription:(NSString*) value {
  resultConfigItem.hasDescription = YES;
  resultConfigItem.pb_description = value;
  return self;
}
- (ConfigItemBuilder*) clearDescription {
  resultConfigItem.hasDescription = NO;
  resultConfigItem.pb_description = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
