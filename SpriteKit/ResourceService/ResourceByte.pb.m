// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ResourceByte.pb.h"
// @@protoc_insertion_point(imports)

@implementation ResourceByteRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ResourceByteRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ResourceByte ()
@property (strong) NSString* key;
@property (strong) NSData* value;
@property (strong) NSString* ext;
@end

@implementation ResourceByte

- (BOOL) hasKey {
  return !!hasKey_;
}
- (void) setHasKey:(BOOL) _value_ {
  hasKey_ = !!_value_;
}
@synthesize key;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) _value_ {
  hasValue_ = !!_value_;
}
@synthesize value;
- (BOOL) hasExt {
  return !!hasExt_;
}
- (void) setHasExt:(BOOL) _value_ {
  hasExt_ = !!_value_;
}
@synthesize ext;
- (instancetype) init {
  if ((self = [super init])) {
    self.key = @"";
    self.value = [NSData data];
    self.ext = @"";
  }
  return self;
}
static ResourceByte* defaultResourceByteInstance = nil;
+ (void) initialize {
  if (self == [ResourceByte class]) {
    defaultResourceByteInstance = [[ResourceByte alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultResourceByteInstance;
}
- (instancetype) defaultInstance {
  return defaultResourceByteInstance;
}
- (BOOL) isInitialized {
  if (!self.hasKey) {
    return NO;
  }
  if (!self.hasValue) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasKey) {
    [output writeString:1 value:self.key];
  }
  if (self.hasValue) {
    [output writeData:2 value:self.value];
  }
  if (self.hasExt) {
    [output writeString:3 value:self.ext];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasKey) {
    size_ += computeStringSize(1, self.key);
  }
  if (self.hasValue) {
    size_ += computeDataSize(2, self.value);
  }
  if (self.hasExt) {
    size_ += computeStringSize(3, self.ext);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ResourceByte*) parseFromData:(NSData*) data {
  return (ResourceByte*)[[[ResourceByte builder] mergeFromData:data] build];
}
+ (ResourceByte*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResourceByte*)[[[ResourceByte builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ResourceByte*) parseFromInputStream:(NSInputStream*) input {
  return (ResourceByte*)[[[ResourceByte builder] mergeFromInputStream:input] build];
}
+ (ResourceByte*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResourceByte*)[[[ResourceByte builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResourceByte*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ResourceByte*)[[[ResourceByte builder] mergeFromCodedInputStream:input] build];
}
+ (ResourceByte*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ResourceByte*)[[[ResourceByte builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ResourceByteBuilder*) builder {
  return [[ResourceByteBuilder alloc] init];
}
+ (ResourceByteBuilder*) builderWithPrototype:(ResourceByte*) prototype {
  return [[ResourceByte builder] mergeFrom:prototype];
}
- (ResourceByteBuilder*) builder {
  return [ResourceByte builder];
}
- (ResourceByteBuilder*) toBuilder {
  return [ResourceByte builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasKey) {
    [output appendFormat:@"%@%@: %@\n", indent, @"key", self.key];
  }
  if (self.hasValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"value", self.value];
  }
  if (self.hasExt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ext", self.ext];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasKey) {
    [dictionary setObject: self.key forKey: @"key"];
  }
  if (self.hasValue) {
    [dictionary setObject: self.value forKey: @"value"];
  }
  if (self.hasExt) {
    [dictionary setObject: self.ext forKey: @"ext"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ResourceByte class]]) {
    return NO;
  }
  ResourceByte *otherMessage = other;
  return
      self.hasKey == otherMessage.hasKey &&
      (!self.hasKey || [self.key isEqual:otherMessage.key]) &&
      self.hasValue == otherMessage.hasValue &&
      (!self.hasValue || [self.value isEqual:otherMessage.value]) &&
      self.hasExt == otherMessage.hasExt &&
      (!self.hasExt || [self.ext isEqual:otherMessage.ext]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasKey) {
    hashCode = hashCode * 31 + [self.key hash];
  }
  if (self.hasValue) {
    hashCode = hashCode * 31 + [self.value hash];
  }
  if (self.hasExt) {
    hashCode = hashCode * 31 + [self.ext hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ResourceByteBuilder()
@property (strong) ResourceByte* resultResourceByte;
@end

@implementation ResourceByteBuilder
@synthesize resultResourceByte;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultResourceByte = [[ResourceByte alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultResourceByte;
}
- (ResourceByteBuilder*) clear {
  self.resultResourceByte = [[ResourceByte alloc] init];
  return self;
}
- (ResourceByteBuilder*) clone {
  return [ResourceByte builderWithPrototype:resultResourceByte];
}
- (ResourceByte*) defaultInstance {
  return [ResourceByte defaultInstance];
}
- (ResourceByte*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ResourceByte*) buildPartial {
  ResourceByte* returnMe = resultResourceByte;
  self.resultResourceByte = nil;
  return returnMe;
}
- (ResourceByteBuilder*) mergeFrom:(ResourceByte*) other {
  if (other == [ResourceByte defaultInstance]) {
    return self;
  }
  if (other.hasKey) {
    [self setKey:other.key];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  if (other.hasExt) {
    [self setExt:other.ext];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ResourceByteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ResourceByteBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setKey:[input readString]];
        break;
      }
      case 18: {
        [self setValue:[input readData]];
        break;
      }
      case 26: {
        [self setExt:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasKey {
  return resultResourceByte.hasKey;
}
- (NSString*) key {
  return resultResourceByte.key;
}
- (ResourceByteBuilder*) setKey:(NSString*) value {
  resultResourceByte.hasKey = YES;
  resultResourceByte.key = value;
  return self;
}
- (ResourceByteBuilder*) clearKey {
  resultResourceByte.hasKey = NO;
  resultResourceByte.key = @"";
  return self;
}
- (BOOL) hasValue {
  return resultResourceByte.hasValue;
}
- (NSData*) value {
  return resultResourceByte.value;
}
- (ResourceByteBuilder*) setValue:(NSData*) value {
  resultResourceByte.hasValue = YES;
  resultResourceByte.value = value;
  return self;
}
- (ResourceByteBuilder*) clearValue {
  resultResourceByte.hasValue = NO;
  resultResourceByte.value = [NSData data];
  return self;
}
- (BOOL) hasExt {
  return resultResourceByte.hasExt;
}
- (NSString*) ext {
  return resultResourceByte.ext;
}
- (ResourceByteBuilder*) setExt:(NSString*) value {
  resultResourceByte.hasExt = YES;
  resultResourceByte.ext = value;
  return self;
}
- (ResourceByteBuilder*) clearExt {
  resultResourceByte.hasExt = NO;
  resultResourceByte.ext = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
